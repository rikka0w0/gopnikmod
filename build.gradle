buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    // minecraft 'net.minecraftforge:forge:1.15.1-30.0.41'
    minecraft 'net.minecraftforge:forge:1.15.2-31.1.47'

    runtime fileTree(dir: 'libs', include: '*.jar')
}

version = "1.0.0"
group = "su.cheekibreeki" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "gopnikmod"

// Need this here so eclipse task generates correctly.
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

// configure  the source folders
sourceSets {
    librikka {
        java {
            srcDir "librikka/src/main/java"
        }
        resources {
            srcDir "librikka/src/main/resources"
        }
    }

    main {
        java {
            srcDir "src/main/java"
        }
        resources {
            srcDir "src/main/resources"
            srcDir "src/generated/resources"
            exclude '.cache'
            exclude 'Thumbs.db'
        }
        compileClasspath += librikka.output
        runtimeClasspath += librikka.output
    }
}

minecraft {
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    // mappings channel: 'snapshot', version: '20190719-1.14.3'
    mappings channel: 'snapshot', version: '20200225-1.15.1'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                gopnikmod {
                    source sourceSets.main
                }
                
                librikka {
                    source sourceSets.librikka
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                gopnikmod {
                    source sourceSets.main
                }
                
                librikka {
                    source sourceSets.librikka
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'gopnikmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                gopnikmod {
                    source sourceSets.main
                }
                
                librikka {
                    source sourceSets.librikka
                }
            }
        }
    }
}

// Ref: https://stackoverflow.com/questions/61093029/how-to-add-another-sourceset-with-a-mod-in-minecraft-forge-forge-gradle-3
configurations {
    librikkaCompile.extendsFrom(compile)
    librikkaCompileOnly.extendsFrom(compileOnly)
    librikkaRuntimeOnly.extendsFrom(runtimeOnly)
}

jar.version = version
jar {
    manifest {
        attributes([
                "Specification-Title": "gopnikmod",
                "Specification-Vendor": "CISM",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"CISM",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def libsDir = new File(System.getenv("LIBS_DIR") ?: "build/libs/")

task deobfJar(type: Jar, dependsOn: 'jar') {
    destinationDir = libsDir
    from sourceSets.main.output
    manifest = jar.manifest
    classifier = 'dev'
}

task sourceJar(type: Jar) {
    destinationDir = libsDir
    from sourceSets.main.allSource
    classifier "src"
}

artifacts {
    archives deobfJar
    archives sourceJar
}